// Generated by https://quicktype.io

export interface PlaylistPanelVideoRenderer {
	title: ShortBylineText
	longBylineText: LongBylineText
	thumbnail: PlaylistPanelVideoRendererThumbnail
	lengthText: LengthText
	selected: boolean
	navigationEndpoint: PlaylistPanelVideoRendererNavigationEndpoint
	videoId: string
	shortBylineText: ShortBylineText
	trackingParams: string
	menu: Menu
	playlistSetVideoId: string
}

export interface LengthText {
	runs: LengthTextRun[]
	accessibility: Accessibility
}

export interface Accessibility {
	accessibilityData: AccessibilityData
}

export interface AccessibilityData {
	label: string
}

export interface LengthTextRun {
	text: string
}

export interface LongBylineText {
	runs: LongBylineTextRun[]
}

export interface LongBylineTextRun {
	text: string
	navigationEndpoint?: RunNavigationEndpoint
}

export interface RunNavigationEndpoint {
	clickTrackingParams: string
	browseEndpoint: BrowseEndpoint
}

export interface BrowseEndpoint {
	browseId: string
	browseEndpointContextSupportedConfigs: BrowseEndpointContextSupportedConfigs
}

export interface BrowseEndpointContextSupportedConfigs {
	browseEndpointContextMusicConfig: BrowseEndpointContextMusicConfig
}

export interface BrowseEndpointContextMusicConfig {
	pageType: string
}

export interface Menu {
	menuRenderer: MenuRenderer
}

export interface MenuRenderer {
	items: ItemElement[]
	trackingParams: string
	accessibility: Accessibility
}

export interface ItemElement {
	menuNavigationItemRenderer?: MenuItemRenderer
	menuServiceItemRenderer?: MenuItemRenderer
	toggleMenuServiceItemRenderer?: ToggleMenuServiceItemRenderer
}

export interface MenuItemRenderer {
	text: ShortBylineText
	icon: Icon
	navigationEndpoint?: MenuNavigationItemRendererNavigationEndpoint
	trackingParams: string
	serviceEndpoint?: ServiceEndpoint
}

export interface Icon {
	iconType: string
}

export interface MenuNavigationItemRendererNavigationEndpoint {
	clickTrackingParams: string
	watchEndpoint?: PurpleWatchEndpoint
	addToPlaylistEndpoint?: AddToPlaylistEndpoint
	browseEndpoint?: BrowseEndpoint
	shareEntityEndpoint?: ShareEntityEndpoint
}

export interface AddToPlaylistEndpoint {
	videoId: string
}

export interface ShareEntityEndpoint {
	serializedShareEntity: string
}

export interface PurpleWatchEndpoint {
	videoId: string
	playlistId: string
	params: string
	loggingContext: LoggingContext
	watchEndpointMusicSupportedConfigs: PurpleWatchEndpointMusicSupportedConfigs
}

export interface LoggingContext {
	vssLoggingContext: VssLoggingContext
}

export interface VssLoggingContext {
	serializedContextData: string
}

export interface PurpleWatchEndpointMusicSupportedConfigs {
	watchEndpointMusicConfig: PurpleWatchEndpointMusicConfig
}

export interface PurpleWatchEndpointMusicConfig {
	musicVideoType: string
}

export interface ServiceEndpoint {
	clickTrackingParams: string
	queueAddEndpoint?: QueueAddEndpoint
	removeFromQueueEndpoint?: RemoveFromQueueEndpoint
}

export interface QueueAddEndpoint {
	queueTarget: AddToPlaylistEndpoint
	queueInsertPosition: string
	commands: Command[]
}

export interface Command {
	clickTrackingParams: string
	addToToastAction: AddToToastAction
}

export interface AddToToastAction {
	item: AddToToastActionItem
}

export interface AddToToastActionItem {
	notificationTextRenderer: NotificationTextRenderer
}

export interface NotificationTextRenderer {
	successResponseText: ShortBylineText
	trackingParams: string
}

export interface ShortBylineText {
	runs: LengthTextRun[]
}

export interface RemoveFromQueueEndpoint {
	videoId: string
	commands: Command[]
}

export interface ToggleMenuServiceItemRenderer {
	defaultText: ShortBylineText
	defaultIcon: Icon
	defaultServiceEndpoint: DefaultServiceEndpointClass
	toggledText: ShortBylineText
	toggledIcon: Icon
	toggledServiceEndpoint: DefaultServiceEndpointClass
	trackingParams: string
}

export interface DefaultServiceEndpointClass {
	clickTrackingParams: string
	likeEndpoint: LikeEndpoint
}

export interface LikeEndpoint {
	status: string
	target: AddToPlaylistEndpoint
}

export interface PlaylistPanelVideoRendererNavigationEndpoint {
	clickTrackingParams: string
	watchEndpoint: FluffyWatchEndpoint
}

export interface FluffyWatchEndpoint {
	videoId: string
	playlistId: string
	index: number
	params: string
	playlistSetVideoId: string
	loggingContext: LoggingContext
	watchEndpointMusicSupportedConfigs: FluffyWatchEndpointMusicSupportedConfigs
}

export interface FluffyWatchEndpointMusicSupportedConfigs {
	watchEndpointMusicConfig: FluffyWatchEndpointMusicConfig
}

export interface FluffyWatchEndpointMusicConfig {
	hasPersistentPlaylistPanel: boolean
	musicVideoType: string
}

export interface PlaylistPanelVideoRendererThumbnail {
	thumbnails: ThumbnailElement[]
}

export interface ThumbnailElement {
	url: string
	width: number
	height: number
}
